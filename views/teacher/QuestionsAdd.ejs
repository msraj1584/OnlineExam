<%- include('../partials/header', { title: 'Add Questions to Exam' }) %>
<%- include('../partials/navbar', { user: user }) %>
<div class="container mt-4">
  <main class="content">
    <div class="text-center mb-4">
      <h2 class="text-primary ">Add Question for <strong> <%= exam.title %></strong></h2>
  </div>
    <a href="/teacher/exam-questions/<%= examId %>" class="btn btn-secondary mb-3 btn-sm">Back to Exam Questions</a>
    
    <form action="/teacher/AddQuestions/<%= examId %>" method="POST" id="questionForm">
      <div class="form-group">
        <label for="type" class="font-weight-bold">Question Type</label>
        <select id="type" name="type" class="form-control" onchange="toggleQuestionType()" required>
          <option value="" disabled selected>Select Question Type</option>
          <option value="multiple-choice">Multiple Choice</option>
          <option value="descriptive">Descriptive</option>
        </select>
      </div>
      <div class="form-group">
        <label for="question" class="font-weight-bold">Question</label>
        <input type="text" id="question" name="question" class="form-control" required />
      </div>

      <div id="multiple-choice-fields" style="display: none;">
        <div class="form-group" id="options-container">
          <label for="options" class="font-weight-bold">Options</label>
                  
        </div>
        <button type="button" class="btn btn-primary mb-2" id="addOption">Add Option</button>
        <div class="form-group">
          <label for="correctAnswer" class="font-weight-bold">Correct Answer</label>
          <div class="form-group" id="correct-answer-container">
            <!-- Radio buttons for options will be dynamically generated here -->
          </div>
        </div>
      </div>

      <div id="descriptive-fields" style="display: none;">
        <div class="form-group">
          <label for="descriptiveAnswer" class="font-weight-bold">Descriptive Answer</label>
          <textarea id="descriptiveAnswer" name="descriptiveAnswer" class="form-control"></textarea>
        </div>
      </div>
<div class="text-center mb-4">
  <button type="submit" class="btn btn-success">Add Question</button>
</div>
    </form>
  </main>
</div>

<script>
  // Function to update the radio buttons based on the current number of options
  function updateRadioButtons() {
    const options = document.querySelectorAll("input[name='options[]']");
    const correctAnswerContainer = document.getElementById("correct-answer-container");
    correctAnswerContainer.innerHTML = ''; // Clear existing radio buttons

    // If there are no options, return early to avoid error
    if (options.length === 0) return;

    options.forEach((option, index) => {
      const radioDiv = document.createElement("div");
      radioDiv.classList.add("form-check");

      const radioInput = document.createElement("input");
      radioInput.type = "radio";
      radioInput.name = "correctAnswer";
      radioInput.value = index;
      radioInput.id = `correctAnswer-${index}`;
      radioInput.classList.add("form-check-input");

      const radioLabel = document.createElement("label");
      radioLabel.classList.add("form-check-label");
      radioLabel.setAttribute("for", `correctAnswer-${index}`);
      radioLabel.textContent = `Option ${index + 1}`;

      radioDiv.appendChild(radioInput);
      radioDiv.appendChild(radioLabel);
      correctAnswerContainer.appendChild(radioDiv);
    });
  }
  function toggleQuestionType() {
  const type = document.getElementById('type').value;
  const multipleChoiceFields = document.getElementById('multiple-choice-fields');
  const descriptiveFields = document.getElementById('descriptive-fields');
  const correctAnswerInput = document.getElementById('correctAnswer');
  const descriptiveAnswerInput = document.getElementById('descriptiveAnswer');
  const optionInputs = document.querySelectorAll('input[name="options[]"]');

  if (type === 'multiple-choice') {
    multipleChoiceFields.style.display = 'block';
    descriptiveFields.style.display = 'none';


    // Add required to multiple-choice fields if they exist
    if (correctAnswerInput) correctAnswerInput.required = true;
    if (descriptiveAnswerInput) descriptiveAnswerInput.required = false;

    // Add required to all options
    optionInputs.forEach(input => {
      input.required = true;
    });
  } else if (type === 'descriptive') {
    multipleChoiceFields.style.display = 'none';
    descriptiveFields.style.display = 'block';

 // Add required to descriptive fields if they exist
 if (correctAnswerInput) correctAnswerInput.required = false;
   // if (descriptiveAnswerInput) descriptiveAnswerInput.required = true;

    // Remove required from all options
    optionInputs.forEach(input => {
      input.required = false;
    });
  }
}

  // Add new option field
  document.getElementById("addOption").addEventListener("click", function() {
    const optionsContainer = document.getElementById("options-container");
    const optionGroup = document.createElement("div");
    optionGroup.classList.add("input-group", "mb-2");
    const options = document.querySelectorAll('input[name="options[]"]'); // Existing option inputs

// Limit to 10 options
if (options.length >= 5) {
  alert("You cannot add more than 5 options.");
  return;
}
    const input = document.createElement("input");
    input.type = "text";
    input.name = "options[]";
    input.classList.add("form-control");
    input.required = true;

    const appendDiv = document.createElement("div");
    appendDiv.classList.add("input-group-append");

    const removeButton = document.createElement("button");
    removeButton.type = "button";
    removeButton.classList.add("btn", "btn-danger", "remove-option");
    removeButton.textContent = "Remove";

    appendDiv.appendChild(removeButton);
    optionGroup.appendChild(input);
    optionGroup.appendChild(appendDiv);
    optionsContainer.appendChild(optionGroup);

    // Add event listener to remove option when clicked
    removeButton.addEventListener("click", function() {
      optionsContainer.removeChild(optionGroup);
      updateRadioButtons(); // Update radio buttons when an option is removed
    });

    updateRadioButtons(); // Update radio buttons after adding a new option
  });

  // Form validation before submission
  document.getElementById("questionForm").addEventListener("submit", function(event) {
    const questionInput = document.getElementById("question");
    const options = document.querySelectorAll("input[name='options[]']");
    const correctAnswer = document.querySelector("input[name='correctAnswer']:checked");
    const type = document.getElementById('type').value;
    // Check if all fields are filled out and if a correct answer is selected
    if (!questionInput.value ) {
      alert("Please fill all fields.");
      event.preventDefault(); // Prevent form submission if validation fails
    }

    // Check if correct answer is selected for multiple-choice questions
    if (type === 'multiple-choice' && !correctAnswer) {
      alert("Please select a correct answer.");
      event.preventDefault(); // Prevent form submission if validation fails
    }
  });

  // Call updateRadioButtons() on page load to ensure correct answer options are displayed
  document.addEventListener("DOMContentLoaded", function() {
    updateRadioButtons();
  });
</script>